/usr/lib/jvm/java-8-openjdk-amd64/bin/java -javaagent:/home/sheng/idea-IU-192.6603.28/lib/idea_rt.jar=37993:/home/sheng/idea-IU-192.6603.28/bin -Dfile.encoding=UTF-8 -classpath /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/home/sheng/IdeaProjects/parser2/target/classes:/home/sheng/.m2/repository/guru/nidi/graphviz-java/0.11.0/graphviz-java-0.11.0.jar:/home/sheng/.m2/repository/org/webjars/npm/viz.js/2.1.2/viz.js-2.1.2.jar:/home/sheng/.m2/repository/org/apache/xmlgraphics/xmlgraphics-commons/2.3/xmlgraphics-commons-2.3.jar:/home/sheng/.m2/repository/commons-io/commons-io/2.6/commons-io-2.6.jar:/home/sheng/.m2/repository/guru/nidi/com/kitfox/svgSalamander/1.1.2/svgSalamander-1.1.2.jar:/home/sheng/.m2/repository/net/arnx/nashorn-promise/0.1.1/nashorn-promise-0.1.1.jar:/home/sheng/.m2/repository/com/eclipsesource/j2v8/j2v8_macosx_x86_64/4.6.0/j2v8_macosx_x86_64-4.6.0.jar:/home/sheng/.m2/repository/com/eclipsesource/j2v8/j2v8_linux_x86_64/4.6.0/j2v8_linux_x86_64-4.6.0.jar:/home/sheng/.m2/repository/com/eclipsesource/j2v8/j2v8_win32_x86_64/4.6.0/j2v8_win32_x86_64-4.6.0.jar:/home/sheng/.m2/repository/com/eclipsesource/j2v8/j2v8_win32_x86/4.6.0/j2v8_win32_x86-4.6.0.jar:/home/sheng/.m2/repository/org/apache/commons/commons-exec/1.3/commons-exec-1.3.jar:/home/sheng/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/sheng/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.26/jcl-over-slf4j-1.7.26.jar:/home/sheng/.m2/repository/org/slf4j/jul-to-slf4j/1.7.26/jul-to-slf4j-1.7.26.jar:/home/sheng/.m2/repository/org/slf4j/slf4j-api/1.7.26/slf4j-api-1.7.26.jar:/home/sheng/.m2/repository/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar:/home/sheng/.m2/repository/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar:/home/sheng/.m2/repository/org/apache/logging/log4j/log4j-core/2.12.0/log4j-core-2.12.0.jar:/home/sheng/.m2/repository/org/apache/logging/log4j/log4j-api/2.12.0/log4j-api-2.12.0.jar:/home/sheng/.m2/repository/org/apache/logging/log4j/log4j-slf4j-impl/2.12.0/log4j-slf4j-impl-2.12.0.jar sheng.zhong.project2.Collatz
remove all comments
main.c generated
inputs from main.c: inputArr
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
argument for collatz:
    input in array offset 0
    n in array offset 8
    output in array offset 16
    quot in array offset 24
    rem in array offset 32
    steps in array offset 40
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
stack size: 136
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
callee saved registers   start at stack offset 128 with respect to the top of stack(sp)
    s0 in stack offset 128
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
virtual stack size: 8 start at stack offset -16 with respect to the bottom of stack(s0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
local variables start at stack offset -32 with respect to the bottom of stack
    output in stack offset -32
    input in stack offset -40
    rem in stack offset -48
    quot in stack offset -56
    steps in stack offset -64
    n in stack offset -72
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
input variables from main.c start at stack offset -88 with respect to the bottom of stack
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    inputArr in stack offset -88
+
 *
  3
  n
 1
acc := 3
push accumulator
acc := n
pop
mul
push accumulator
acc := 1
pop
add
steps
acc := steps
-
 rem
 2
acc := rem
push accumulator
acc := 2
pop
sub
=
 rem
 0
acc := rem
push accumulator
acc := 0
pop
equal
n
acc := n
0
acc := 0
+
 quot
 1
acc := quot
push accumulator
acc := 1
pop
add
+
 steps
 1
acc := steps
push accumulator
acc := 1
pop
add
0
acc := 0
input
acc := input
Gre
 rem
 1
acc := rem
push accumulator
acc := 1
pop
greater
Gre
 n
 1
acc := n
push accumulator
acc := 1
pop
greater
quot
acc := quot
    .file   "collatz.c"
    .option nopic
    .text
    .align 1
    .global collatz
    .type collatz, @function
collatz:

  addi  sp,sp,-136
  sd    s0,128(sp)
  addi  s0,sp,136
  sd    a0,-88(s0)
  ld    a0,-88(s0)
  ld    t0,0(a0)
  sd    t0,-40(s0)
  ld    t0,8(a0)
  sd    t0,-72(s0)
  ld    t0,16(a0)
  sd    t0,-32(s0)
  ld    t0,24(a0)
  sd    t0,-56(s0)
  ld    t0,32(a0)
  sd    t0,-48(s0)
  ld    t0,40(a0)
  sd    t0,-64(s0)
nop
nop
nop
  #n := input
  #label: 0
  ld    t0,-40(s0)
  sd    t0,-72(s0)
  #steps := 0
  #label: 1
  li    t0,0
  sd    t0,-64(s0)
  j     .L2
#code for while condition (n Gre 1 )  met:
.L3:
  #rem := n
  #label: 3
  ld    t0,-72(s0)
  sd    t0,-48(s0)
  #quot := 0
  #label: 4
  li    t0,0
  sd    t0,-56(s0)
  j     .L4
#code for while condition (rem Gre 1 )  met:
.L5:
  #rem := (rem - 2 )
  #label: 6
  ld    t0,-48(s0)
  sd    t0,-16(s0)
  li    t0,2
  ld    t1,-16(s0)
  sub   t0,t1,t0
  sd    t0,-48(s0)
  #quot := (quot + 1 )
  #label: 7
  ld    t0,-56(s0)
  sd    t0,-16(s0)
  li    t0,1
  ld    t1,-16(s0)
  add   t0,t0,t1
  sd    t0,-56(s0)
#while condition: (rem Gre 1 )
  #label: 5
.L4:
  ld    t0,-48(s0)
  sd    t0,-16(s0)
  li    t0,1
  ld    t1,-16(s0)
  sub   t1,t1,t0
  sgtz  t0,t1
  bnez  t0,.L5
#code for while condition (rem Gre 1 )  not met:
#IF condition: (rem = 0 )
  #label: 8
  ld    t0,-48(s0)
  sd    t0,-16(s0)
  li    t0,0
  ld    t1,-16(s0)
  sub   t1,t1,t0
  seqz  t0,t1
#go to .L6 if condition not met
  beqz  t0,.L6
#Things to do when IF condition: (rem = 0 )  is met
  #n := quot
  #label: 9
  ld    t0,-56(s0)
  sd    t0,-72(s0)
  j     .L7
#Things to do when IF condition: (rem = 0 )  is Not met
.L6:
  #n := ((3 * n ) + 1 )
  #label: 10
  li    t0,3
  sd    t0,-16(s0)
  ld    t0,-72(s0)
  ld    t1,-16(s0)
  mul   t0,t0,t1
  sd    t0,-16(s0)
  li    t0,1
  ld    t1,-16(s0)
  add   t0,t0,t1
  sd    t0,-72(s0)
#code after if (rem = 0 )
.L7:
  #steps := (steps + 1 )
  #label: 11
  ld    t0,-64(s0)
  sd    t0,-16(s0)
  li    t0,1
  ld    t1,-16(s0)
  add   t0,t0,t1
  sd    t0,-64(s0)
#while condition: (n Gre 1 )
  #label: 2
.L2:
  ld    t0,-72(s0)
  sd    t0,-16(s0)
  li    t0,1
  ld    t1,-16(s0)
  sub   t1,t1,t0
  sgtz  t0,t1
  bnez  t0,.L3
#code for while condition (n Gre 1 )  not met:
  #output := steps
  #label: 12
  ld    t0,-64(s0)
  sd    t0,-32(s0)
nop
nop
nop
  ld    a0,-88(s0)
  ld    t0,-40(s0)
  sd    t0,0(a0)
  ld    t0,-72(s0)
  sd    t0,8(a0)
  ld    t0,-32(s0)
  sd    t0,16(a0)
  ld    t0,-56(s0)
  sd    t0,24(a0)
  ld    t0,-48(s0)
  sd    t0,32(a0)
  ld    t0,-64(s0)
  sd    t0,40(a0)
nop
  ld    s0,128(sp)
  addi  sp,sp,136
jr  ra
    .size   collatz, .-collatz
    .ident "GCC: (GNU) 9.0.1 20190123 (Red Hat 9.0.1-0.1)"
    .section        .note.GNU-stack,"",@progbits

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/sheng/.m2/repository/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/sheng/.m2/repository/org/apache/logging/log4j/log4j-slf4j-impl/2.12.0/log4j-slf4j-impl-2.12.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
09:29:11.301 [main] INFO guru.nidi.graphviz.engine.AbstractGraphvizEngine - Could not initialize guru.nidi.graphviz.engine.GraphvizCmdLineEngine
guru.nidi.graphviz.engine.GraphvizException: dot command not found
09:29:11.323 [main] INFO guru.nidi.graphviz.engine.AbstractGraphvizEngine - Starting V8 runtime...
OpenJDK 64-Bit Server VM warning: You have loaded library /home/sheng/libj2v8_linux_x86_64.so which might have disabled stack guard. The VM will try to fix the stack guard now.
It's highly recommended that you fix the library with 'execstack -c <libfile>', or link it with '-z noexecstack'.
09:29:11.466 [main] INFO guru.nidi.graphviz.engine.AbstractGraphvizEngine - Started V8 runtime. Initializing graphviz...
09:29:11.622 [main] INFO guru.nidi.graphviz.engine.AbstractGraphvizEngine - Initialized graphviz.
Done



*********** Data flow equations:  ***********
RDIn0 = RDStart
RDExit0 = RDIn0 \ {(n, l')} | l' is labels} U {(n,0)}
RDIn1 = RDExit0
RDExit1 = RDIn1 \ {(steps, l')} | l' is labels} U {(steps,1)}
RDIn2 = RDExit11 U RDExit1
RDExit2 = RDIn2
RDIn3 = RDExit2
RDExit3 = RDIn3 \ {(rem, l')} | l' is labels} U {(rem,3)}
RDIn4 = RDExit3
RDExit4 = RDIn4 \ {(quot, l')} | l' is labels} U {(quot,4)}
RDIn5 = RDExit7 U RDExit4
RDExit5 = RDIn5
RDIn6 = RDExit5
RDExit6 = RDIn6 \ {(rem, l')} | l' is labels} U {(rem,6)}
RDIn7 = RDExit6
RDExit7 = RDIn7 \ {(quot, l')} | l' is labels} U {(quot,7)}
RDIn8 = RDExit5
RDExit8 = RDIn8
RDIn9 = RDExit8
RDExit9 = RDIn9 \ {(n, l')} | l' is labels} U {(n,9)}
RDIn10 = RDExit8
RDExit10 = RDIn10 \ {(n, l')} | l' is labels} U {(n,10)}
RDIn11 = RDExit9 U RDExit10
RDExit11 = RDIn11 \ {(steps, l')} | l' is labels} U {(steps,11)}
RDIn12 = RDExit2
RDExit12 = RDIn12 \ {(output, l')} | l' is labels} U {(output,12)}
******** Reaching Definition result:
RDIn0: {(output, -1)(input, -1)(rem, -1)(quot, -1)(steps, -1)(n, -1)}
RDExit0: {(output, -1)(input, -1)(rem, -1)(quot, -1)(steps, -1)(n, 0)}
RDIn1: {(output, -1)(input, -1)(rem, -1)(quot, -1)(steps, -1)(n, 0)}
RDExit1: {(output, -1)(input, -1)(rem, -1)(quot, -1)(steps, 1)(n, 0)}
RDIn2: {(output, -1)(input, -1)(rem, -1)(rem, 3)(rem, 6)(quot, -1)(quot, 4)(quot, 7)(steps, 1)(steps, 11)(n, 0)(n, 9)(n, 10)}
RDExit2: {(output, -1)(input, -1)(rem, -1)(rem, 3)(rem, 6)(quot, -1)(quot, 4)(quot, 7)(steps, 1)(steps, 11)(n, 0)(n, 9)(n, 10)}
RDIn3: {(output, -1)(input, -1)(rem, -1)(rem, 3)(rem, 6)(quot, -1)(quot, 4)(quot, 7)(steps, 1)(steps, 11)(n, 0)(n, 9)(n, 10)}
RDExit3: {(output, -1)(input, -1)(rem, 3)(quot, -1)(quot, 4)(quot, 7)(steps, 1)(steps, 11)(n, 0)(n, 9)(n, 10)}
RDIn4: {(output, -1)(input, -1)(rem, 3)(quot, -1)(quot, 4)(quot, 7)(steps, 1)(steps, 11)(n, 0)(n, 9)(n, 10)}
RDExit4: {(output, -1)(input, -1)(rem, 3)(quot, 4)(steps, 1)(steps, 11)(n, 0)(n, 9)(n, 10)}
RDIn5: {(output, -1)(input, -1)(rem, 3)(rem, 6)(quot, 4)(quot, 7)(steps, 1)(steps, 11)(n, 0)(n, 9)(n, 10)}
RDExit5: {(output, -1)(input, -1)(rem, 3)(rem, 6)(quot, 4)(quot, 7)(steps, 1)(steps, 11)(n, 0)(n, 9)(n, 10)}
RDIn6: {(output, -1)(input, -1)(rem, 3)(rem, 6)(quot, 4)(quot, 7)(steps, 1)(steps, 11)(n, 0)(n, 9)(n, 10)}
RDExit6: {(output, -1)(input, -1)(rem, 6)(quot, 4)(quot, 7)(steps, 1)(steps, 11)(n, 0)(n, 9)(n, 10)}
RDIn7: {(output, -1)(input, -1)(rem, 6)(quot, 4)(quot, 7)(steps, 1)(steps, 11)(n, 0)(n, 9)(n, 10)}
RDExit7: {(output, -1)(input, -1)(rem, 6)(quot, 7)(steps, 1)(steps, 11)(n, 0)(n, 9)(n, 10)}
RDIn8: {(output, -1)(input, -1)(rem, 3)(rem, 6)(quot, 4)(quot, 7)(steps, 1)(steps, 11)(n, 0)(n, 9)(n, 10)}
RDExit8: {(output, -1)(input, -1)(rem, 3)(rem, 6)(quot, 4)(quot, 7)(steps, 1)(steps, 11)(n, 0)(n, 9)(n, 10)}
RDIn9: {(output, -1)(input, -1)(rem, 3)(rem, 6)(quot, 4)(quot, 7)(steps, 1)(steps, 11)(n, 0)(n, 9)(n, 10)}
RDExit9: {(output, -1)(input, -1)(rem, 3)(rem, 6)(quot, 4)(quot, 7)(steps, 1)(steps, 11)(n, 9)}
RDIn10: {(output, -1)(input, -1)(rem, 3)(rem, 6)(quot, 4)(quot, 7)(steps, 1)(steps, 11)(n, 0)(n, 9)(n, 10)}
RDExit10: {(output, -1)(input, -1)(rem, 3)(rem, 6)(quot, 4)(quot, 7)(steps, 1)(steps, 11)(n, 10)}
RDIn11: {(output, -1)(input, -1)(rem, 3)(rem, 6)(quot, 4)(quot, 7)(steps, 1)(steps, 11)(n, 9)(n, 10)}
RDExit11: {(output, -1)(input, -1)(rem, 3)(rem, 6)(quot, 4)(quot, 7)(steps, 11)(n, 9)(n, 10)}
RDIn12: {(output, -1)(input, -1)(rem, -1)(rem, 3)(rem, 6)(quot, -1)(quot, 4)(quot, 7)(steps, 1)(steps, 11)(n, 0)(n, 9)(n, 10)}
RDExit12: {(output, 12)(input, -1)(rem, -1)(rem, 3)(rem, 6)(quot, -1)(quot, 4)(quot, 7)(steps, 1)(steps, 11)(n, 0)(n, 9)(n, 10)}



******* start constant Folding *********
******* End constant Folding *********
label: 0--{(input,input)}
label: 1--{}
label: 2--{(n,n)}
label: 3--{(n,n)}
label: 4--{}
label: 5--{(rem,rem)}
label: 6--{(rem,rem)}
label: 7--{(quot,quot)}
label: 8--{(rem,rem)}
label: 9--{(quot,quot)}
label: 10--{(n,n)}
label: 11--{(steps,steps)}
label: 12--{(steps,steps)}



******* Equations for liveness analysis *********
LV0In = {input} U (LV0Exit \ {n})
LV0Exit = LV1In
LV1In = {} U (LV1Exit \ {steps})
LV1Exit = LV2In
LV2In = {n} U (LV2Exit \ {})
LV2Exit = LV12In U LV3In
LV3In = {n} U (LV3Exit \ {rem})
LV3Exit = LV4In
LV4In = {} U (LV4Exit \ {quot})
LV4Exit = LV5In
LV5In = {rem} U (LV5Exit \ {})
LV5Exit = LV8In U LV6In
LV6In = {rem} U (LV6Exit \ {rem})
LV6Exit = LV7In
LV7In = {quot} U (LV7Exit \ {quot})
LV7Exit = LV5In
LV8In = {rem} U (LV8Exit \ {})
LV8Exit = LV10In U LV9In
LV9In = {quot} U (LV9Exit \ {n})
LV9Exit = LV11In
LV10In = {n} U (LV10Exit \ {n})
LV10Exit = LV11In
LV11In = {steps} U (LV11Exit \ {steps})
LV11Exit = LV2In
LV12In = {steps} U (LV12Exit \ {output})
LV12Exit = LVEndIn


Following code is dead and removed


**************** Liveness ******************
LV0_In:   {input}
LV0_Exit: {n}
LV1_In:   {n}
LV1_Exit: {steps, n}
LV2_In:   {steps, n}
LV2_Exit: {steps, n}
LV3_In:   {steps, n}
LV3_Exit: {rem, steps, n}
LV4_In:   {rem, steps, n}
LV4_Exit: {rem, quot, steps, n}
LV5_In:   {rem, quot, steps, n}
LV5_Exit: {rem, quot, steps, n}
LV6_In:   {rem, quot, steps, n}
LV6_Exit: {rem, quot, steps, n}
LV7_In:   {rem, quot, steps, n}
LV7_Exit: {rem, quot, steps, n}
LV8_In:   {rem, quot, steps, n}
LV8_Exit: {quot, steps, n}
LV9_In:   {quot, steps}
LV9_Exit: {steps, n}
LV10_In:   {steps, n}
LV10_Exit: {steps, n}
LV11_In:   {steps, n}
LV11_Exit: {steps, n}
LV12_In:   {steps}
LV12_Exit: {output}
*********Var-Reg Map *********
output: 1
input: 1
rem: 4
quot: 2
steps: 3
n: 1
s1: [n, output, input]
s2: [quot]
s3: [steps]
s4: [rem]



new assembly code generated successfully
inputs from main.c: inputArr
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
argument for collatz:
    input in array offset 0
    n in array offset 8
    output in array offset 16
    quot in array offset 24
    rem in array offset 32
    steps in array offset 40
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
stack size: 136
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
callee saved registers   start at stack offset 128 with respect to the top of stack(sp)
    s3 in stack offset 128
    s4 in stack offset 120
    s0 in stack offset 112
    s1 in stack offset 104
    s2 in stack offset 96
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
local variables start at stack offset -64 with respect to the bottom of stack
    output in stack offset -64
    input in stack offset -72
    rem in stack offset -80
    quot in stack offset -88
    steps in stack offset -96
    n in stack offset -104
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
input variables from main.c start at stack offset -120 with respect to the bottom of stack
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    inputArr in stack offset -120
for input 0: 0
for input 1: 0
for input 4: 2
for input 9: 19
for input 50: 24
for input 899: 116
for input 9999: 91

Process finished with exit code 0
